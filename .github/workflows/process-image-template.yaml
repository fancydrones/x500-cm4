name: Reusable image Create, publish and release

on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string
      registry:
        required: true
        type: string
      app_context:
        required: true
        type: string
      image_name:
        required: true
        type: string
      image_title:
        required: true
        type: string
      image_description:
        required: true
        type: string
      image_vendor:
        required: true
        type: string

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ inputs.platforms }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get image date tag
        id: tag
        run: echo "::set-output name=datetag::$(date +'%Y%m%d')-${GITHUB_SHA::7}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.tag.outputs.datetag }}
          labels: |
            org.opencontainers.image.title=${{ inputs.image_title }}
            org.opencontainers.image.description=${{ inputs.image_description }}
            org.opencontainers.image.vendor=${{ inputs.image_vendor }}
            org.opencontainers.image.version=${{ steps.tag.outputs.datetag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.app_context }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

# TODO: Update deployment using kustomize